{
  "contractName": "Lockable",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isMethodEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Locked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "lock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000600160146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610638806100b06000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634e71e0c81461008857806388fa26171461009f5780638da5cb5b146100ce578063a69df4b514610125578063e30c39781461013c578063f2fde38b14610193578063f83d08ba146101d6575b600080fd5b34801561009457600080fd5b5061009d6101ed565b005b3480156100ab57600080fd5b506100b461038c565b604051808215151515815260200191505060405180910390f35b3480156100da57600080fd5b506100e361039f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013157600080fd5b5061013a6103c4565b005b34801561014857600080fd5b50610151610467565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019f57600080fd5b506101d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061048d565b005b3480156101e257600080fd5b506101eb610568565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561024957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600160149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561041f57600080fd5b60018060146101000a81548160ff0219169083151502179055507f19aad37188a1d3921e29eb3c66acf43d81975e107cb650d58cca878627955fd660405160405180910390a1565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104e857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561052457600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105c357600080fd5b6000600160146101000a81548160ff0219169083151502179055507f0f2e5b6c72c6a4491efd919a9f9a409f324ef0708c11ee57d410c2cb06c0992b60405160405180910390a15600a165627a7a7230582096d7aa208c183667b13d5c3b839c74c6c32ec422d8288318dcf35097489f1fc00029",
  "deployedBytecode": "0x608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634e71e0c81461008857806388fa26171461009f5780638da5cb5b146100ce578063a69df4b514610125578063e30c39781461013c578063f2fde38b14610193578063f83d08ba146101d6575b600080fd5b34801561009457600080fd5b5061009d6101ed565b005b3480156100ab57600080fd5b506100b461038c565b604051808215151515815260200191505060405180910390f35b3480156100da57600080fd5b506100e361039f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013157600080fd5b5061013a6103c4565b005b34801561014857600080fd5b50610151610467565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019f57600080fd5b506101d4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061048d565b005b3480156101e257600080fd5b506101eb610568565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561024957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600160149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561041f57600080fd5b60018060146101000a81548160ff0219169083151502179055507f19aad37188a1d3921e29eb3c66acf43d81975e107cb650d58cca878627955fd660405160405180910390a1565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104e857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561052457600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105c357600080fd5b6000600160146101000a81548160ff0219169083151502179055507f0f2e5b6c72c6a4491efd919a9f9a409f324ef0708c11ee57d410c2cb06c0992b60405160405180910390a15600a165627a7a7230582096d7aa208c183667b13d5c3b839c74c6c32ec422d8288318dcf35097489f1fc00029",
  "sourceMap": "336:654:0:-;;;465:5;435:35;;;;;;;;;;;;;;;;;;;;820:10:1;812:5;;:18;;;;;;;;;;;;;;;;;;860:1;837:12;;:25;;;;;;;;;;;;;;;;;;336:654:0;;;;;;",
  "deployedSourceMap": "336:654:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1588:168:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1588:168:1;;;;;;435:35:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;435:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;496:20:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;496:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;729:87:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;729:87:0;;;;;;521:27:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;521:27:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:139;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1360:139:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:84:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;901:84:0;;;;;;1588:168:1;1165:12;;;;;;;;;;;1151:26;;:10;:26;;;1143:35;;;;;;;;1678:12;;;;;;;;;;;1650:41;;1671:5;;;;;;;;;;;1650:41;;;;;;;;;;;;1706:12;;;;;;;;;;;1698:5;;:20;;;;;;;;;;;;;;;;;;1748:1;1725:12;;:25;;;;;;;;;;;;;;;;;;1588:168::o;435:35:0:-;;;;;;;;;;;;;:::o;496:20:1:-;;;;;;;;;;;;;:::o;729:87:0:-;1003:5:1;;;;;;;;;;;989:19;;:10;:19;;;981:28;;;;;;;;787:4:0;769:15;;:22;;;;;;;;;;;;;;;;;;801:10;;;;;;;;;;729:87::o;521:27:1:-;;;;;;;;;;;;;:::o;1360:139::-;1003:5;;;;;;;;;;;989:19;;:10;:19;;;981:28;;;;;;;;1459:1;1438:23;;:9;:23;;;;1430:32;;;;;;;;1484:9;1469:12;;:24;;;;;;;;;;;;;;;;;;1360:139;:::o;901:84:0:-;1003:5:1;;;;;;;;;;;989:19;;:10;:19;;;981:28;;;;;;;;957:5:0;939:15;;:23;;;;;;;;;;;;;;;;;;972:8;;;;;;;;;;901:84::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport './Ownable.sol';\r\n\r\n/**\r\n* @title Lockable\r\n* @dev Base contract which allows children to lock certain methods from being called by clients.\r\n* Locked methods are deemed unsafe by default, but must be implemented in children functionality to adhere by\r\n* some inherited standard, for example. \r\n*/\r\n\r\ncontract Lockable is Ownable {\r\n\r\n\t// Events\r\n\tevent Unlocked();\r\n\tevent Locked();\r\n\r\n\t// Fields\r\n\tbool public isMethodEnabled = false;\r\n\r\n\t// Modifiers\r\n\t/**\r\n\t* @dev Modifier that disables functions by default unless they are explicitly enabled\r\n\t*/\r\n\tmodifier whenUnlocked() {\r\n\t\trequire(isMethodEnabled);\r\n\t\t_;\r\n\t}\r\n\r\n\t// Methods\r\n\t/**\r\n\t* @dev called by the owner to enable method\r\n\t*/\r\n\tfunction unlock() onlyOwner public {\r\n\t\tisMethodEnabled = true;\r\n\t\temit Unlocked();\r\n\t}\r\n\r\n\t/**\r\n\t* @dev called by the owner to disable method, back to normal state\r\n\t*/\r\n\tfunction lock() onlyOwner public {\r\n\t\tisMethodEnabled = false;\r\n\t\temit Locked();\r\n\t}\r\n\r\n}",
  "sourcePath": "C:\\Users\\npain\\Projects\\Carbon\\UpgradeableERC20\\contracts\\helpers\\Lockable.sol",
  "ast": {
    "absolutePath": "/C/Users/npain/Projects/Carbon/UpgradeableERC20/contracts/helpers/Lockable.sol",
    "exportedSymbols": {
      "Lockable": [
        46
      ]
    },
    "id": 47,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/Users/npain/Projects/Carbon/UpgradeableERC20/contracts/helpers/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 47,
        "sourceUnit": 138,
        "src": "28:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 137,
              "src": "357:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$137",
                "typeString": "contract Ownable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "357:7:0"
          }
        ],
        "contractDependencies": [
          137
        ],
        "contractKind": "contract",
        "documentation": "@title Lockable\r\n@dev Base contract which allows children to lock certain methods from being called by clients.\r\nLocked methods are deemed unsafe by default, but must be implemented in children functionality to adhere by\r\nsome inherited standard, for example. \r",
        "fullyImplemented": true,
        "id": 46,
        "linearizedBaseContracts": [
          46,
          137
        ],
        "name": "Lockable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 6,
            "name": "Unlocked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "397:2:0"
            },
            "src": "383:17:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 8,
            "name": "Locked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:2:0"
            },
            "src": "403:15:0"
          },
          {
            "constant": false,
            "id": 11,
            "name": "isMethodEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "435:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "435:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "465:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "614:40:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14,
                        "name": "isMethodEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "627:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1249,
                        1250
                      ],
                      "referencedDeclaration": 1249,
                      "src": "619:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "619:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "619:24:0"
                },
                {
                  "id": 17,
                  "nodeType": "PlaceholderStatement",
                  "src": "648:1:0"
                }
              ]
            },
            "documentation": "@dev Modifier that disables functions by default unless they are explicitly enabled\r",
            "id": 19,
            "name": "whenUnlocked",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "611:2:0"
            },
            "src": "590:64:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 31,
              "nodeType": "Block",
              "src": "764:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24,
                      "name": "isMethodEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "769:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "787:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "769:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "769:22:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 28,
                      "name": "Unlocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "801:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "801:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "EmitStatement",
                  "src": "796:15:0"
                }
              ]
            },
            "documentation": "@dev called by the owner to enable method\r",
            "id": 32,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 22,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 84,
                  "src": "747:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "747:9:0"
              }
            ],
            "name": "unlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "744:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "764:0:0"
            },
            "scope": 46,
            "src": "729:87:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "934:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "isMethodEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "939:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "957:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "939:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "939:23:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 41,
                      "name": "Locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "972:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "972:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "EmitStatement",
                  "src": "967:13:0"
                }
              ]
            },
            "documentation": "@dev called by the owner to disable method, back to normal state\r",
            "id": 45,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 35,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 34,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 84,
                  "src": "917:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "917:9:0"
              }
            ],
            "name": "lock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "914:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "934:0:0"
            },
            "scope": 46,
            "src": "901:84:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 47,
        "src": "336:654:0"
      }
    ],
    "src": "0:990:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/npain/Projects/Carbon/UpgradeableERC20/contracts/helpers/Lockable.sol",
    "exportedSymbols": {
      "Lockable": [
        46
      ]
    },
    "id": 47,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/C/Users/npain/Projects/Carbon/UpgradeableERC20/contracts/helpers/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 47,
        "sourceUnit": 138,
        "src": "28:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 137,
              "src": "357:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$137",
                "typeString": "contract Ownable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "357:7:0"
          }
        ],
        "contractDependencies": [
          137
        ],
        "contractKind": "contract",
        "documentation": "@title Lockable\r\n@dev Base contract which allows children to lock certain methods from being called by clients.\r\nLocked methods are deemed unsafe by default, but must be implemented in children functionality to adhere by\r\nsome inherited standard, for example. \r",
        "fullyImplemented": true,
        "id": 46,
        "linearizedBaseContracts": [
          46,
          137
        ],
        "name": "Lockable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 6,
            "name": "Unlocked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "397:2:0"
            },
            "src": "383:17:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 8,
            "name": "Locked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:2:0"
            },
            "src": "403:15:0"
          },
          {
            "constant": false,
            "id": 11,
            "name": "isMethodEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 46,
            "src": "435:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "435:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "465:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "614:40:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14,
                        "name": "isMethodEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "627:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1249,
                        1250
                      ],
                      "referencedDeclaration": 1249,
                      "src": "619:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "619:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "619:24:0"
                },
                {
                  "id": 17,
                  "nodeType": "PlaceholderStatement",
                  "src": "648:1:0"
                }
              ]
            },
            "documentation": "@dev Modifier that disables functions by default unless they are explicitly enabled\r",
            "id": 19,
            "name": "whenUnlocked",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "611:2:0"
            },
            "src": "590:64:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 31,
              "nodeType": "Block",
              "src": "764:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 24,
                      "name": "isMethodEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "769:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "787:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "769:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "769:22:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 28,
                      "name": "Unlocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "801:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "801:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "EmitStatement",
                  "src": "796:15:0"
                }
              ]
            },
            "documentation": "@dev called by the owner to enable method\r",
            "id": 32,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 22,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 21,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 84,
                  "src": "747:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "747:9:0"
              }
            ],
            "name": "unlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "744:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "764:0:0"
            },
            "scope": 46,
            "src": "729:87:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "934:51:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "isMethodEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "939:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "957:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "939:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "939:23:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 41,
                      "name": "Locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "972:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "972:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "EmitStatement",
                  "src": "967:13:0"
                }
              ]
            },
            "documentation": "@dev called by the owner to disable method, back to normal state\r",
            "id": 45,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 35,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 34,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 84,
                  "src": "917:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "917:9:0"
              }
            ],
            "name": "lock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "914:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "934:0:0"
            },
            "scope": 46,
            "src": "901:84:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 47,
        "src": "336:654:0"
      }
    ],
    "src": "0:990:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-23T17:57:34.122Z"
}